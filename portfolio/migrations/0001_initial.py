# Generated by Django 4.0.1 on 2022-02-23 17:28

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Portfolio_name', models.CharField(default='MY PORTFOLIO CONFIG', max_length=50, verbose_name='portfolio_name/id')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioExhibit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=20, verbose_name='Title of Work')),
                ('Short_Description', models.TextField(verbose_name='Work Short Description')),
                ('Date', models.DateField(verbose_name='Date of project')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=70, verbose_name='The Title of Post/Job')),
                ('Description', models.TextField(verbose_name='Description of Job done')),
                ('Start_date', models.DateField(verbose_name='Date Job Started')),
                ('End_date', models.DateField(verbose_name='Date Job Ended')),
                ('Portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Work',
                'verbose_name_plural': 'Works',
            },
        ),
        migrations.CreateModel(
            name='User_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fullname', models.CharField(default='Enter Full Name', help_text='Full name to be displayed on portfolio', max_length=50, verbose_name='FullName')),
                ('Country', django_countries.fields.CountryField(default='Choose Country', help_text='Country of Residence', max_length=2)),
                ('City', models.CharField(default='Enter City Name', help_text='name of city that would be displayed on front page', max_length=50, verbose_name='City_Name')),
                ('Phone_number', phonenumber_field.modelfields.PhoneNumberField(default='Enter phone number', help_text='Phone number to display on home page', max_length=128, region=None, verbose_name='Phone Number')),
                ('profession', models.CharField(help_text='professions to be placed on homepage. Use comma to separate profession', max_length=100, verbose_name='Professions')),
                ('Curriculum_vitae', models.FileField(help_text='File upload for CV', upload_to='upload/', verbose_name='Curriculum_Vitae')),
                ('Portfolio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'User_Information',
                'verbose_name_plural': 'User_Information',
            },
        ),
        migrations.CreateModel(
            name='Social_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Facebook_url', models.URLField(default='None', verbose_name='Facebook Account Url')),
                ('Instagram_url', models.URLField(default='None', verbose_name='Instagram Account Url')),
                ('Twitter_url', models.URLField(default='None', verbose_name='Twitter Account Url')),
                ('LinkedIn_url', models.URLField(default='None', verbose_name='LinkedIn Account Url')),
                ('Email_account_name', models.EmailField(default='None', max_length=254, verbose_name='Email Name')),
                ('Github_url', models.URLField(default='None', verbose_name='Github Account Url')),
                ('Portfolio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Social_info',
                'verbose_name_plural': 'Social_infos',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Icon_name', models.CharField(help_text='icon to be used for describing this service', max_length=50, verbose_name='icon name')),
                ('Title', models.CharField(help_text='title to be used for this particular services', max_length=60, verbose_name='Title of services')),
                ('Description', models.TextField(help_text='Description of this service', verbose_name='Description of services')),
                ('Portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Services',
                'verbose_name_plural': 'Servicess',
            },
        ),
        migrations.CreateModel(
            name='Personlization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Color_theme', models.CharField(choices=[('yellow', 'yellow'), ('red', 'red'), ('blue', 'blue'), ('orange', 'orange')], default='Choose color theme', help_text='Choose the portfolio color scheme', max_length=50, verbose_name='Color Theme for Portfolio Colors')),
                ('Terminal_icon_blink', models.BooleanField(default=True, verbose_name='Blink terminal icon')),
                ('Animation', models.BooleanField(default=True, verbose_name='animation on homepage')),
                ('Background_picture', models.ImageField(upload_to='images/', verbose_name='home page bg ')),
                ('Service_background_picture', models.ImageField(upload_to='images/', verbose_name='service page bg')),
                ('Experience_background_picture', models.ImageField(upload_to='images/', verbose_name='experience page bg')),
                ('Contact_background_picture', models.ImageField(upload_to='images/', verbose_name='contact page bg')),
                ('blog_background_picture', models.ImageField(upload_to='images/', verbose_name='blog page bg')),
                ('blog_post_background_picture', models.ImageField(upload_to=None, verbose_name='blog post page bg')),
                ('Service_background_picture_switch', models.BooleanField(default=False, verbose_name='service page bg switch')),
                ('Experience_background_picture_switch', models.BooleanField(default=False, verbose_name='experience page bg switch')),
                ('Contact_background_picture_switch', models.BooleanField(default=False, verbose_name='contact page bg switch')),
                ('blog_background_picture_switch', models.BooleanField(default=False, verbose_name='blog page bg switch')),
                ('blog_post_background_picture_switch', models.BooleanField(default=False, verbose_name='blog post page bg switch')),
                ('Portfolio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Personalization',
                'verbose_name_plural': 'Personalization',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_story', models.TextField(verbose_name='User Experience Story')),
                ('Portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Experience',
                'verbose_name_plural': 'Experiences',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year_of_graduation', models.DateField(verbose_name='Year of graduation')),
                ('Degree_awarded', models.CharField(max_length=50, verbose_name='Degree Awarded')),
                ('Description', models.TextField(verbose_name='Description of degree awarded')),
                ('Portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('E_mail', models.EmailField(max_length=254, verbose_name='Contact E-Mail')),
                ('Phone', phonenumber_field.modelfields.PhoneNumberField(help_text='Phone number to display on home page', max_length=128, region=None, verbose_name='Phone Number')),
                ('Website', models.URLField(help_text='Website Link', verbose_name='Website Link')),
                ('Address', models.TextField(help_text='Contact Address', verbose_name='Address of Contact')),
                ('Portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio', verbose_name='User_info')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
    ]
